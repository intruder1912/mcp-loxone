[workspace]
members = [
    ".",
    "examples/hello-world-mcp",
]

resolver = "2"

[workspace.package]
rust-version = "1.79"

[workspace.dependencies]
# Core dependencies
tokio = { version = "1.48", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
async-trait = "0.1"
uuid = { version = "1.18", features = ["v4", "serde"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
anyhow = "1.0"
thiserror = "2.0"

# Validation
validator = { version = "0.20", features = ["derive"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# System
dirs = "6.0"

# Crypto
sha2 = "0.10"
base64 = "0.22"
rand = "0.9"
aes = "0.8"
cbc = "0.1"
pbkdf2 = "0.12"
hex = "0.4"


# CLI dependencies
clap = { version = "4.5", features = ["derive", "env"] }
toml = "0.9"
url = "2.5"

# HTTP/Web 
axum = { version = "0.8", features = ["ws"] }
tower = { version = "0.5" }
tower-http = { version = "0.6", features = ["cors", "auth"] }
hyper = { version = "1.7", features = ["full"] }

# WebSocket
tokio-tungstenite = { version = "0.28", features = ["rustls-tls-webpki-roots"] }
tungstenite = { version = "0.28" }

# Async utilities
futures = "0.3"
futures-util = "0.3"

[package]
name = "loxone-mcp-rust"
version = "0.6.0"
edition = "2021"
authors = ["Ralf Anton Beier <ralf_beier@me.com>"]
license = "MIT OR Apache-2.0"
description = "High-performance async Rust library for Loxone home automation systems with MCP server support"
homepage = "https://github.com/avrabe/mcp-loxone"
repository = "https://github.com/avrabe/mcp-loxone"
documentation = "https://docs.rs/loxone-mcp-rust"
readme = "README.md"
keywords = ["loxone", "home-automation", "smart-home", "iot", "mcp"]
categories = ["api-bindings", "embedded", "network-programming", "asynchronous"]
exclude = ["/.github", "/target", "/tests/fixtures", "/integration_tests"]
build = "build.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu", "wasm32-wasip2"]

[badges]
maintenance = { status = "actively-developed" }

[build-dependencies]
chrono = "0.4"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "loxone-mcp-server"
path = "src/main.rs"

[[bin]]
name = "loxone-mcp-setup"
path = "src/bin/setup.rs"

[[bin]]
name = "loxone-mcp-auth"
path = "src/bin/loxone-mcp-auth.rs"


# Development utilities
[[bin]]
name = "loxone-mcp-test-endpoints"
path = "src/bin/test_endpoints.rs"




[dependencies]
# MCP Framework (from crates.io)
pulseengine-mcp-logging = "0.13.0"
pulseengine-mcp-protocol = { version = "0.13.0", optional = true }
pulseengine-mcp-server = { version = "0.13.0", optional = true }
pulseengine-mcp-transport = { version = "0.13.0", optional = true }
pulseengine-mcp-auth = { version = "0.13.0", optional = true }
pulseengine-mcp-security = { version = "0.13.0", optional = true }
pulseengine-mcp-monitoring = { version = "0.13.0", optional = true }
pulseengine-mcp-cli = { version = "0.13.0", optional = true }
pulseengine-mcp-cli-derive = { version = "0.13.0", optional = true }

# Legacy MCP Foundation (to be removed after migration)
# Legacy mcp-foundation removed - framework is now default

# Async runtime
tokio = { version = "1.48", features = ["rt-multi-thread", "rt", "io-util", "sync", "macros", "time", "fs"] }


# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client with WASM support
reqwest = { version = "0.12", features = ["json", "rustls-tls"], default-features = false }

# Infisical SDK support (via HTTP API)
serde_qs = "0.15"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "std", "fmt", "json"] }
tracing-appender = "0.2"

# Async traits
async-trait = "0.1"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# UUID support
uuid = { version = "1.18", features = ["v4", "serde"] }

# Hex encoding for request IDs
hex = "0.4"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# InfluxDB client for time series data
influxdb2 = { version = "0.5", optional = true }
influxdb2-derive = { version = "0.1", optional = true }

# Configuration
config = "0.15"

# Crypto dependencies (OpenSSL only)
openssl = { version = "0.10", features = ["vendored"], optional = true } # Modern RSA implementation (recommended)
aes = { version = "0.8", optional = true }
rand = { version = "0.9" }  # Used by crypto feature and setup tool
sha2 = "0.10"
x509-parser = { version = "0.18", optional = true }
hostname = "0.4"

# WebSocket (conditional for WASM compatibility)
tokio-tungstenite = { version = "0.28", optional = true, features = ["rustls-tls-webpki-roots"] }

# URL parsing
url = { version = "2.5", features = ["serde"] }
urlencoding = "2.1"
md5 = "0.8"

# Backtrace for error handling (debug builds only)
backtrace = "0.3"

# Base64 encoding
base64 = "0.22"

# Futures utilities
futures = "0.3"
futures-util = "0.3"
async-stream = "0.3"

# Tokio utilities
tokio-util = "0.7"

# Regular expressions for input validation
regex = "1.12"

# Static initializer for global metrics
once_cell = "1.21"

# Time serialization
humantime-serde = "1.1"

# Schema generation
schemars = "1.0"

# System information for resource monitoring
sysinfo = "0.37"

# HTTP server for MCP SSE transport (native only)
axum = { version = "0.8", features = ["ws"], optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", features = ["cors", "auth"], optional = true }

# Command line argument parsing
clap = { version = "4.5", features = ["derive", "env"] }

# Password input
rpassword = "7.4"

# Network discovery
# mdns = { version = "3.0", optional = true } # Uses unmaintained net2 and proc-macro-error
mdns-sd = { version = "0.15", optional = true } # Modern mDNS implementation with maintained dependencies

# Compression for cold storage
flate2 = "1.1"
zstd = "0.13"
lz4 = "1.28"

# Time-series data handling
tempfile = { version = "3.23" }
toml = "0.9.8"

# Turso database support
libsql = { version = "0.9", optional = true }
sqlx = { version = "0.8.6", default-features = false, features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid", "json"], optional = true }

# Additional native dependencies
# keyring = { version = "2.0", optional = true } # Uses unmaintained dependencies (derivative, instant)
socket2 = { version = "0.6", optional = true }
dirs = "6.0"  # For default storage directory
generic-array = "0.14"  # Must match version used by aes crate

[features]
default = ["crypto-openssl", "websocket", "infisical", "discovery", "http-server", "influxdb", "framework-migration", "turso"]

# Framework features (now default)
framework-migration = [
    "pulseengine-mcp-protocol", 
    "pulseengine-mcp-server", 
    "pulseengine-mcp-transport", 
    "pulseengine-mcp-auth",
    "pulseengine-mcp-security",
    "pulseengine-mcp-monitoring",
    "pulseengine-mcp-cli",
    "pulseengine-mcp-cli-derive",
    "http-server", 
    "websocket"
]

# Crypto features
crypto-openssl = ["openssl", "aes", "x509-parser"] # Modern crypto with OpenSSL (recommended)
websocket = ["tokio-tungstenite"]
infisical = []
discovery = ["socket2", "mdns-sd"] # Network discovery with modern mDNS implementation
mdns = ["mdns-sd"] # Feature gate for mDNS functionality (restored with mdns-sd crate)
http-server = ["axum", "tower", "tower-http"]
influxdb = ["influxdb2", "influxdb2-derive"]
turso = ["libsql", "sqlx"]  # Turso database support for weather data storage
wasm = []  # Feature flag for WASM compilation
test-utils = []  # Enables mock utilities for integration tests


[profile.release]
# Optimize for size when building WASM
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"

[profile.release.package."*"]
opt-level = "s"

# Development profile for faster builds
[profile.dev]
opt-level = 0
debug = true
incremental = true


[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.23"
futures = "0.3"

# Modern testing infrastructure (2025)
# Async test isolation
serial_test = "3.2"          # Sequential test execution for shared state
temp-env = "0.3"             # Environment variable isolation

# HTTP API mocking
wiremock = "0.6"             # HTTP mocking for Loxone API
httpmock = "0.8"             # Alternative HTTP mock server

# General mocking
mockall = "0.13"             # Trait mocking for dependencies

# Containers & external services
testcontainers = { version = "0.25" }      # Container-based testing
testcontainers-modules = "0.13" # Pre-built container modules

# Test utilities
rstest = "0.26"              # Test fixtures & parameterized tests
serde_json = "1.0"           # JSON handling in tests (likely already available but explicit for tests)
pretty_assertions = "1.4"    # Better assertion output

# Enable test-utils feature for integration tests
[[test]]
name = "loxone_stats_tests"
required-features = ["test-utils"]



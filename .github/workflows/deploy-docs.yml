name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'loxone-mcp-rust/docs/**'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'loxone-mcp-rust/docs/**'

  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: false

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: |
          cd docs
          if [ -f "Gemfile" ]; then
            bundle install
          fi

      - name: Build documentation site
        run: |
          cd docs
          # Copy Rust documentation files to main docs
          if [ -d "../loxone-mcp-rust/docs" ]; then
            cp -r ../loxone-mcp-rust/docs/* ./
          fi
          
          # Build with Jekyll if Gemfile exists
          if [ -f "Gemfile" ]; then
            bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
          else
            # Simple build - just copy HTML files
            mkdir -p _site
            cp -r *.html *.css *.js *.svg *.png *.ico _site/ 2>/dev/null || true
            if [ -d "assets" ]; then
              cp -r assets _site/
            fi
            if [ -d "images" ]; then
              cp -r images _site/
            fi
            # Copy documentation files
            find . -name "*.md" -exec cp {} _site/ \; 2>/dev/null || true
            find . -name "*.html" -path "./loxone-mcp-rust/*" -exec cp {} _site/ \; 2>/dev/null || true
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/_site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4